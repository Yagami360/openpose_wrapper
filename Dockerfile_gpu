#-----------------------------
# ベースイメージ
#-----------------------------
# CUDA 10.0 for Debian
FROM nvidia/cuda:10.0-cudnn7-devel

#-----------------------------
# 基本ライブラリのインストール
#-----------------------------
# インストール時のキー入力待ちをなくす環境変数
ENV DEBIAN_FRONTEND noninteractive

RUN set -x && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
    python3-dev \
    python3-pip \
    sudo \
    git \
    wget \
    bzip2 \
    cmake \
    libprotobuf-dev \
    protobuf-compiler \
    libgoogle-glog-dev \
    libboost-all-dev \
    libcaffe-cuda-dev \
    libhdf5-dev \
    libatlas-base-dev \
    libopencv-dev \
    # imageのサイズを小さくするためにキャッシュ削除
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

#-----------------------------
# ユーザーの追加
#-----------------------------
ARG user_name=ubuntu
ARG user_id=1000
ARG group_name=ubuntu
ARG group_id=1000
ENV HOME=/home/${user_name}

#RUN groupadd -g ${group_id} ${group_name}
#RUN useradd -u ${user_id} -g ${group_id} -d ${HOME} --create-home --shell /bin/bash ${user_name}
#RUN chown -R ${user_name}:${group_name} ${HOME}
#RUN echo "${user_name} ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/90-user
#USER ${user_name}

# user に sudo 権限を付与
#RUN sudo gpasswd -a ${user_name} sudo

# 全アクセスを許可
#RUN chmod 777 /home/${user_name}

#-----------------------------
# 環境変数
#-----------------------------
ENV LC_ALL=C.UTF-8
ENV export LANG=C.UTF-8
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/
ENV PYTHONPATH=$PYTHONPATH:/usr/local/python/

#-----------------------------
# 追加ライブラリのインストール
#-----------------------------
# openpose のインストール
WORKDIR /openpose_wrapper
RUN git clone https://github.com/CMU-Perceptual-Computing-Lab/openpose.git .

WORKDIR /openpose_wrapper/build
RUN cmake -DBUILD_PYTHON=ON .. && make -j `nproc`

WORKDIR /openpose_wrapper/build/python/openpose
RUN cp pyopenpose.cpython-36m-x86_64-linux-gnu.so /usr/local/lib/python3.6/dist-packages

WORKDIR /usr/local/lib/python3.6/dist-packages
RUN ln -s pyopenpose.cpython-36m-x86_64-linux-gnu.so pyopenpose

# その他モジュールのインストール
RUN pip3 install -U flask
RUN pip3 install -U flask_cors
RUN pip3 install -U requests
RUN pip3 install -U gunicorn
RUN pip3 install -U pillow
RUN pip3 install -U tqdm

#-----------------------------
# コンテナ起動後の作業ディレクトリ
#-----------------------------
WORKDIR ${HOME}/share/openpose_wrapper
