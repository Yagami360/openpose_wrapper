#-----------------------------
# ベースイメージ
#-----------------------------
# CUDA 10.0 for Debian
#FROM nvidia/cuda:10.0-cudnn7-devel
#FROM nvidia/cuda:10.1-cudnn7-devel
FROM nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04

#-----------------------------
# 環境変数
#-----------------------------
ENV LC_ALL=C.UTF-8
ENV export LANG=C.UTF-8
#ENV CMAKE_VER="3.13.4"
ENV CMAKE_VER="3.16.0"

#-----------------------------
# 基本ライブラリのインストール
#-----------------------------
# インストール時のキー入力待ちをなくす環境変数
ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    python3-dev \
    python3-pip \
    git \
    sudo \
    g++ \
    wget \
    make \
    libprotobuf-dev \
    protobuf-compiler \
    libopencv-dev \
    libgoogle-glog-dev \
    libboost-all-dev \
    libcaffe-cuda-dev \
    libhdf5-dev \
    libatlas-base-dev \
    # imageのサイズを小さくするためにキャッシュ削除
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN pip3 install --upgrade pip setuptools
RUN pip3 install -U numpy opencv-python 

#-----------------------------
# 追加ライブラリのインストール
#-----------------------------
RUN pip3 install -U flask
RUN pip3 install -U flask_cors
RUN pip3 install -U requests
RUN pip3 install -U gunicorn
RUN pip3 install -U uWSGI
RUN pip3 install -U pillow
RUN pip3 install -U tqdm
RUN pip3 install -U numpy

#-----------------------------
# cmake のインストール
#（replace cmake as old version has CUDA variable bugs）
#-----------------------------
RUN wget https://github.com/Kitware/CMake/releases/download/v${CMAKE_VER}/cmake-${CMAKE_VER}-Linux-x86_64.tar.gz && \
    tar xzf cmake-${CMAKE_VER}-Linux-x86_64.tar.gz -C /opt && \
    rm cmake-${CMAKE_VER}-Linux-x86_64.tar.gz
    
ENV PATH="/opt/cmake-${CMAKE_VER}-Linux-x86_64/bin:${PATH}"

#-----------------------------
# openpose のインストール
#-----------------------------
WORKDIR /openpose_wrapper/openpose_gpu
RUN git clone https://github.com/CMU-Perceptual-Computing-Lab/openpose.git .

WORKDIR /openpose_wrapper/openpose_gpu/build

RUN cmake \
    -DBUILD_PYTHON=ON \
    -DDOWNLOAD_BODY_MPI_MODEL:Bool=ON \
    -DDOWNLOAD_BODY_COCO_MODEL:Bool=ON \
    -DDOWNLOAD_FACE_MODEL:Bool=ON \
    -DDOWNLOAD_HAND_MODEL:Bool=ON \
    ..

RUN sed -ie 's/set(AMPERE "80 86")/#&/g'  ../cmake/Cuda.cmake && \
    sed -ie 's/set(AMPERE "80 86")/#&/g'  ../3rdparty/caffe/cmake/Cuda.cmake

RUN make -j`nproc`
RUN make install

#-----------------------------
# OpenPose Pytho API
#-----------------------------
WORKDIR /openpose_wrapper/openpose_gpu/build/python/openpose
RUN cp pyopenpose.cpython-36m-x86_64-linux-gnu.so /usr/local/lib/python3.6/dist-packages

# pyopenpose 使用のための設定
WORKDIR /usr/local/lib/python3.6/dist-packages
RUN ln -s pyopenpose.cpython-36m-x86_64-linux-gnu.so pyopenpose

# Python API のパス
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/
ENV PYTHONPATH=/openpose_wrapper/openpose_gpu/build/python/openpose

#-----------------------------
# コードの書き込み
#-----------------------------
#COPY *.sh /openpose_wrapper/
#COPY openpose_server /openpose_wrapper/openpose_server/

#-----------------------------
# コンテナ起動後の作業ディレクトリ
#-----------------------------
WORKDIR /openpose_wrapper
